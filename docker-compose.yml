version: '3.9'

services:
  database:
    image: mariadb
    container_name: database
    restart: unless-stopped
    profiles: ['all', 'database', 'phpmyadmin']
    ports: ['${DB_PORT}:3306']
    networks: ['database']
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect"]
      interval: 5s
      timeout: 10s
      retries: 3
    environment:
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MARIADB_USER: ${DB_USER}
      MARIADB_PASSWORD: ${DB_PASS}
      MARIADB_DATABASE: ${DB_NAME}

  backend:
    image: xedom/codeduel-backend
    container_name: backend
    restart: unless-stopped
    profiles: ['all', 'api', 'backend']
    ports: ['${BACKEND_PORT}:80']
    depends_on:
      database:
        condition: service_healthy
        required: false
    networks: ['database', 'app']
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:${BACKEND_PORT}/v1/health"]
    environment:
      HOST: ${BACKEND_HOST}
      PORT: 80

      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}

      AUTH_GITHUB_CLIENT_ID: ${AUTH_GITHUB_CLIENT_ID}
      AUTH_GITHUB_CLIENT_SECRET: ${AUTH_GITHUB_CLIENT_SECRET}
      AUTH_GITHUB_CLIENT_CALLBACK_URL: ${AUTH_GITHUB_CLIENT_CALLBACK_URL}

      FRONTEND_URL: ${FRONTEND_URL}
      LOGIN_REDIRECT: ${LOGIN_REDIRECT}

      COOKIE_DOMAIN: ${COOKIE_DOMAIN}
      COOKIE_PATH: ${COOKIE_PATH}
      COOKIE_HTTP_ONLY: ${COOKIE_HTTP_ONLY}
      COOKIE_SECURE: ${COOKIE_SECURE}

      CORS_ORIGIN: ${CORS_ORIGIN}
      CORS_METHODS: ${CORS_METHODS}
      CORS_HEADERS: ${CORS_HEADERS}
      CORS_CREDENTIALS: ${CORS_CREDENTIALS}

      ACCESS_TOKEN_COOKIE_NAME: ${ACCESS_TOKEN_COOKIE_NAME}
      ACCESS_TOKEN_EXPIRES: ${ACCESS_TOKEN_EXPIRES}
      REFRESH_TOKEN_COOKIE_NAME: ${REFRESH_TOKEN_COOKIE_NAME}
      REFRESH_TOKEN_EXPIRES: ${REFRESH_TOKEN_EXPIRES}

      JWT_SECRET: ${JWT_SECRET}
      JWT_ISSUER: ${JWT_ISSUER}

      SERVICE_HEADER_NAME: ${SERVICE_HEADER_NAME}
      SERVICE_TOKEN: ${SERVICE_TOKEN}

      SWAGGER: ${SWAGGER}

  lobby:
    image: xedom/codeduel-lobby
    container_name: lobby
    restart: unless-stopped
    profiles: ['all', 'api', 'lobby']
    ports: ['${LOBBY_PORT}:80']
    depends_on: ['runner', 'backend']
    networks: ['runner', 'app']
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
    environment:
      HOST: ${LOBBY_HOST}
      PORT: 80

      CORS_ORIGIN: ${CORS_ORIGIN}
      CORS_METHODS: ${CORS_METHODS}
      CORS_HEADERS: ${CORS_HEADERS}
      CORS_CREDENTIALS: ${CORS_CREDENTIALS}
      
      BACKEND_URL: ${BACKEND_URL}
      BACKEND_API_KEY: ${BACKEND_API_KEY}
      
      RUNNER_URL: ${RUNNER_URL}
      RUNNER_API_KEY: ${RUNNER_API_KEY}

  runner:
    image: xedom/codeduel-runner
    container_name: runner
    restart: unless-stopped
    profiles: ['all', 'api', 'runner']
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports: ['${RUNNER_PORT}:80']
    networks: ['runner']
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/v1"]
    environment:
      HOST: ${RUNNER_HOST}
      PORT: 80

      DOCKER_IMAGE_PREFIX: ${DOCKER_IMAGE_PREFIX}
      DOCKER_TIMEOUT: ${DOCKER_TIMEOUT}

  frontend:
    image: xedom/codeduel-fe
    container_name: frontend
    restart: unless-stopped
    profiles: ['all', 'frontend']
    ports: ['${FRONTEND_PORT}:80']
    depends_on: ['backend']
    networks: ['app']
    environment:
      HOST: ${FRONTEND_HOST}
      PORT: 80

      PUBLIC_LOBBY_WS: ${PUBLIC_LOBBY_WS}
      PUBLIC_LOBBY_API: ${PUBLIC_LOBBY_API}
      PUBLIC_BACKEND_URL: ${PUBLIC_BACKEND_URL}

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    profiles: ['all', 'phpmyadmin']
    ports: ['${PMA_PORT:-8080}:80']
    depends_on: ['database']
    networks: ['database']
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}

networks:
  database:
    driver: bridge
  app:
    driver: bridge
  runner:
    driver: bridge
